
@using Kendo.Mvc

@*http://stackoverflow.com/questions/15545960/kendo-tabstrip-with-kendogrid-inside-using-javascript-for-events-handling*@
<script>
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });

            var grid = $("#Grid").data("kendoGrid");
            grid.one("dataBinding", function (e) {
                e.preventDefault();   // cancel grid rebind if error occurs  
            });

            alert(message);
        }
    }

</script>

<br />
@(Html.Kendo().Grid<WorkshopExpert.Web.Models.DevelopmentGridVm>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.ForeignKey(d => d.TimeSlot_Id, (System.Web.Mvc.SelectList)ViewBag.TimeSlots).Title("TimeSlot");
        columns.Bound(d => d.Order);
        columns.Bound(d => d.TopicTitle);
        columns.ForeignKey(d => d.DeliveyMethod_Id, (System.Web.Mvc.SelectList)ViewBag.DeliveryMethods).Title("Delivery");
        columns.Bound(d => d.Duration).Format("{0:hh:mm}").Filterable(false);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("WorkshopDevelopmentEditor"))
    .Pageable()
    .Sortable()
    .Selectable()
    .Filterable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(d => d.Id);
            model.Field(d => d.Id).Editable(false).DefaultValue(Guid.Empty);
            model.Field(d => d.Workshop_Id).Editable(false).DefaultValue(new Guid(ViewBag.WorkshopId));
        
        })
        .Create(update => update.Action("EditingPopup_Create", "Development"))
        .Read(read => read.Action("Index_Read", "Development", new { id = (string)ViewBag.WorkshopId }))
            .Update(update => update.Action("EditingPopup_Update", "Development"))
            .Destroy(update => update.Action("EditingPopup_Destroy", "Development"))
    )
)





@section Styles{
    <style>
        .k-widget.k-window {
            width: 500px;
        }
        .k-edit-buttons {
            width: 480px;
        }

        .k-textbox, k-dropdown, k-widget.k-dropdown.k-header {
            width: 240px;
        }
    </style>

}